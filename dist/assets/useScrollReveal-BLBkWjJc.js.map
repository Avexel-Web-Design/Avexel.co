{"version":3,"file":"useScrollReveal-BLBkWjJc.js","sources":["../../src/hooks/useScrollReveal.ts"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\n/**\r\n * Hook to add scroll reveal animations to elements with the 'reveal' class\r\n */\r\nconst useScrollReveal = () => {\r\n  useEffect(() => {\r\n    const revealElements = document.querySelectorAll(\".reveal\");\r\n\r\n    const revealOnScroll = () => {\r\n      const windowHeight = window.innerHeight;\r\n      const revealPoint = 150;\r\n\r\n      revealElements.forEach((element) => {\r\n        const revealTop = element.getBoundingClientRect().top;\r\n\r\n        if (revealTop < windowHeight - revealPoint) {\r\n          element.classList.add(\"active\");\r\n        } else {\r\n          // Uncomment the line below if you want elements to hide again when scrolled away\r\n          // element.classList.remove('active');\r\n        }\r\n      });\r\n    };\r\n\r\n    // Run once on mount to reveal elements already in view\r\n    revealOnScroll();\r\n\r\n    window.addEventListener(\"scroll\", revealOnScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", revealOnScroll);\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport default useScrollReveal;\r\n"],"names":["useScrollReveal","useEffect","revealElements","revealOnScroll","windowHeight","revealPoint","element"],"mappings":"wCAKA,MAAMA,EAAkB,IAAM,CAC5BC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAiB,SAAS,iBAAiB,SAAS,EAEpDC,EAAiB,IAAM,CAC3B,MAAMC,EAAe,OAAO,YACtBC,EAAc,IAELH,EAAA,QAASI,GAAY,CAChBA,EAAQ,sBAAA,EAAwB,IAElCF,EAAeC,GACrBC,EAAA,UAAU,IAAI,QAAQ,CAIhC,CACD,CACH,EAGe,OAAAH,EAAA,EAER,OAAA,iBAAiB,SAAUA,CAAc,EAEzC,IAAM,CACJ,OAAA,oBAAoB,SAAUA,CAAc,CACrD,CACF,EAAG,EAAE,CACP"}